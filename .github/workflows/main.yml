# This is a basic workflow to help you get started with Actions

name: CICD 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Checkout repository code
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: 
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."     

      # Run Build Verification Test (BVT)
      - name: Run BVT
        run: |
          # Add commands to run your BVT
          # For example:
          echo "Running Build Verification Test..."
          # Add commands to compile or execute the necessary BVT scripts or commands
          
          # Example commands to validate the presence of index.html and style.css files
          if [ -f index.html ]; then
            echo "index.html file found!"
          else
            echo "index.html file not found!"
            exit 1
          fi

          if [ -f styles.css ]; then
            echo "styles.css file found!"
          else
            echo "styles.css file not found!"
            exit 1
          fi
          
          if [ -f script.js ]; then
            echo "script.js file found!"
          else
            echo "script.js file not found!"
            exit 1
          fi
          
          # Ensure to capture the result of the BVT execution

          # Example exit code handling for success or failure
          if [ $? -eq 0 ]; then
            echo "BVT passed!"
          else
            echo "BVT failed!"
            exit 1
          fi

      # Additional steps for reporting or notifications

      # Add build steps here, such as compiling your code or preparing the application

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      # Add test steps here, such as running unit tests or integration tests, functional test
      # Performance tests, security tests, acceptance tests. 

  deploy:
    needs: [build, test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      # Add deployment steps here, such as deploying your application to a server or a cloud platform

      # You can also include additional steps for notifications or clean-up actions after deployment
